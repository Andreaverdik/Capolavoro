openapi: 3.0.0
info:
  title: API del Sistema di Gestione Scuola HelpDesk
  version: '3.0.0'
  description: API RESTful per la gestione degli utenti, delle aule e delle risorse correlate in un ambiente scolastico.

servers:
  - url: https://api.helpdesk.com/v1

tags:
  - name: Utenti
    description: Operazioni relative agli utenti (CRUD)
  - name: Aule
    description: Operazioni relative alle aule
  - name: Dispositivi
    description: Operazioni relative ai dispositivi
  - name: Segnalazioni
    description: Operazioni relative alle segnalazioni
  - name: Assegnazione
    description: Operazioni relative all'assegnazione dei tecnici ai relativi laboratori
  - name: Alert
    description: Operazioni relative alla gestione dei messaggi alert
  - name: Notifica
    description: Operazioni relative alla gestione delle notifiche
  - name: Notifiche Utente
    description: Operazioni relative alla gestione tra le notifiche e l'utente

paths:
  /utenti:
    get:
      tags: [Utenti]
      summary: Ottiene un elenco di tutti gli utenti
      operationId: getUtenti
      responses:
        '200':
          description: Un elenco di utenti
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
    post:
      tags: [Utenti]
      summary: Crea un nuovo utente
      operationId: creaUtente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utente'
      responses:
        '201':
          description: Utente creato

  /utenti/{utenteId}:
    get:
      tags: [Utenti]
      summary: Ottiene i dettagli di un utente specifico
      operationId: getUtenteById
      parameters:
        - name: utenteId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dettagli dell'utente richiesto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utente'
    put:
      tags: [Utenti]
      summary: Aggiorna un utente esistente
      operationId: aggiornaUtente
      parameters:
        - name: utenteId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utente'
      responses:
        '200':
          description: Utente aggiornato
    delete:
      tags: [Utenti]
      summary: Elimina un utente
      operationId: eliminaUtente
      parameters:
        - name: utenteId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Utente eliminato

  /aule:
    get:
      tags: [Aule]
      summary: Ottiene un elenco di tutte le aule
      operationId: getAule
      responses:
        '200':
          description: Un elenco di aule
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aula'
                  

  /dispositivi:
    get:
      tags: [Dispositivi]
      summary: Ottiene un elenco di tutti i dispositivi
      operationId: getDispositivi
      responses:
        '200':
          description: Un elenco di dispositivi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dispositivo'
    post:
      tags: [Dispositivi]
      summary: Registra un nuovo dispositivo
      operationId: creaDispositivo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispositivo'
      responses:
        '201':
          description: Dispositivo registrato

  /dispositivi/{dispositivoId}:
    get:
      tags: [Dispositivi]
      summary: Ottiene i dettagli di un dispositivo specifico
      operationId: getDispositivoById
      parameters:
        - name: dispositivoId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dettagli del dispositivo richiesto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispositivo'
    put:
      tags: [Dispositivi]
      summary: Aggiorna un dispositivo esistente
      operationId: aggiornaDispositivo
      parameters:
        - name: dispositivoId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispositivo'
      responses:
        '200':
          description: Dispositivo aggiornato
    delete:
      tags: [Dispositivi]
      summary: Rimuove un dispositivo dal sistema
      operationId: eliminaDispositivo
      parameters:
        - name: dispositivoId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Dispositivo eliminato

  /segnalazioni:
    get:
      tags: [Segnalazioni]
      summary: Ottiene un elenco di tutte le segnalazioni
      operationId: getSegnalazioni
      responses:
        '200':
          description: Un elenco di segnalazioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Segnalazione'
    post:
      tags: [Segnalazioni]
      summary: Crea una nuova segnalazione
      operationId: creaSegnalazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segnalazione'
      responses:
        '201':
          description: Segnalazione creata

  /segnalazioni/{segnalazioneId}:
    get:
      tags: [Segnalazioni]
      summary: Ottiene i dettagli di una segnalazione specifica
      operationId: getSegnalazioneById
      parameters:
        - name: segnalazioneId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dettagli della segnalazione richiesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segnalazione'
    put:
      tags: [Segnalazioni]
      summary: Aggiorna una segnalazione esistente
      operationId: aggiornaSegnalazione
      parameters:
        - name: segnalazioneId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segnalazione'
      responses:
        '200':
          description: Segnalazione aggiornata
    delete:
      tags: [Segnalazioni]
      summary: Elimina una segnalazione
      operationId: eliminaSegnalazione
      parameters:
        - name: segnalazioneId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Segnalazione eliminata
          
        # Assegnazione
  /assegnazioni:
    get:
      tags: [Assegnazione]
      summary: Ottiene un elenco di tutte le assegnazioni
      operationId: getAssegnazioni
      responses:
        '200':
          description: Un elenco di assegnazioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assegnazione'
    post:
      tags: [Assegnazione]
      summary: Crea una nuova assegnazione tra un utente e un'aula
      operationId: creaAssegnazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assegnazione'
      responses:
        '201':
          description: Assegnazione creata

  /assegnazioni/{utente_id}/{aula_id}:
    delete:
      tags: [Assegnazione]
      summary: Elimina un'assegnazione
      operationId: eliminaAssegnazione
      parameters:
        - name: utente_id
          in: path
          required: true
          schema:
            type: integer
        - name: aula_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Assegnazione eliminata

  # Alert
  /alert:
    get:
      tags: [Alert]
      summary: Ottiene un elenco di tutti gli alert
      operationId: getAlerts
      responses:
        '200':
          description: Un elenco di alert
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'

  # Notifica
  /notifiche:
    get:
      tags: [Notifica]
      summary: Ottiene un elenco di tutte le notifiche
      operationId: getNotifiche
      responses:
        '200':
          description: Un elenco di notifiche
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifica'

  # Notifiche Utente
  /notifiche_utente:
    get:
      tags: [Notifiche Utente]
      summary: Ottiene un elenco delle notifiche per utente
      operationId: getNotificheUtente
      responses:
        '200':
          description: Un elenco di notifiche per utente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificheUtente'


components:
  schemas:
    Utente:
      type: object
      properties:
        utente_id:
          type: integer
        stato:
          type: string
          enum: [attivo, bannato]
        password:
          type: string
        email:
          type: string
          format: email
        ruolo:
          type: string
          enum: [generico, tecnico, amministratore, ata]
        nome:
          type: string
        cognome:
          type: string
      required:
        - stato
        - password
        - email
        - ruolo
        - nome
        - cognome

    Aula:
      type: object
      properties:
        aula_id:
          type: integer
        numero:
          type: integer
        piano:
          type: string
          enum: [piano terra, primo piano, secondo piano]
        nome:
          type: string
        tipo:
          type: string
          enum: [classe, laboratorio, wc, palestra, spogliatoio, ufficio, assistente tecnico, bar, aula, sala server, magazzino]
      required:
        - numero
        - piano
        - tipo
        - nome
    Dispositivo:
      type: object
      properties:
        dispositivo_id:
          type: string
        aula_id:
          type: integer
          nullable: true
        tipo:
          type: string
          enum: [scolastico, portatile]
      required:
        - dispositivo_id
        - tipo

    Segnalazione:
      type: object
      properties:
        segnalazione_id:
          type: integer
        utente_id:
          type: integer
        dispositivo_id:
          type: string
          nullable: true
        aula_id:
          type: integer
          nullable: true
        data_ultima_modifica:
          type: string
          format: date-time
        data_creazione:
          type: string
          format: date-time
        titolo:
          type: string
        descrizione:
          type: string
        stato:
          type: string
          enum: [in attesa, fallita, completata]
        tipo:
          type: string
          enum: [Tecnici, ATA]
      required:
        - utente_id
        - data_ultima_modifica
        - data_creazione
        - titolo
        - descrizione
        - stato
        - tipo
        
    Assegnazione:
      type: object
      properties:
        utente_id:
          type: integer
        aula_id:
          type: integer
      required:
        - utente_id
        - aula_id

    Alert:
      type: object
      properties:
        alert_id:
          type: integer
          readOnly: true
        utente_id:
          type: integer
        aula_id:
          type: integer
      required:
        - utente_id
        - aula_id

    Notifica:
      type: object
      properties:
        notifica_id:
          type: integer
          readOnly: true
        segnalazione_id:
          type: integer
      required:
        - segnalazione_id

    NotificheUtente:
      type: object
      properties:
        notifica_id:
          type: integer
        utente_id:
          type: integer
      required:
        - notifica_id
        - utente_id
